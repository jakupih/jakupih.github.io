{"version":3,"sources":["webpack:///node_modules/@angular/core/__ivy_ngcc__/fesm2015 lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/colors/color.component.html","webpack:///src/app/files/files.component.html","webpack:///src/app/header/header.component.html","webpack:///src/app/snake/snake.component.html","webpack:///src/app/test-area/sandbox.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/colors/color.component.ts","webpack:///src/app/files/files.component.ts","webpack:///src/app/header/header.component.css","webpack:///src/app/header/header.component.ts","webpack:///src/app/snake/snake.component.css","webpack:///src/app/snake/snake.component.ts","webpack:///src/app/snake/snake.constants.ts","webpack:///src/app/snake/snake.storage.service.ts","webpack:///src/app/test-area/sandbox.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","AppRoutingModule","imports","forRoot","AppComponent","selector","template","AppModule","declarations","providers","provide","useClass","bootstrap","ColorComponent","red","green","blue","hex","num","toString","length","onChangeRed","value","newValue","parseInt","isNaN","onChangeGreen","onChangeBlue","FilesComponent","HeaderComponent","SnakeComponent","bestScoreService","default_mode","isGameOver","all_modes","getKeys","Object","board","obstacles","score","showMenuChecker","gameStarted","newBestScore","best_score","retrieve","snake","direction","LEFT","parts","x","y","fruit","setBoard","key","RIGHT","tempDirection","UP","DOWN","col","row","GAME_OVER","FRUIT","HEAD","BODY","checkObstacles","OBSTACLE","BOARD","newHead","repositionHead","me","boardCollision","gameOver","noWallsTransition","obstacleCollision","selfCollision","fruitCollision","eatFruit","oldTail","pop","unshift","setTimeout","updatePositions","interval","assign","part","randomNumber","addObstacles","push","res","forEach","val","resetFruit","tail","store","Math","floor","random","i","j","mode","host","BOARD_SIZE","CONTROLS","COLORS","GAME_MODES","classic","no_walls","BestScoreManager","ngxSnake","localStorage","setItem","JSON","stringify","storage","parse","getItem","SandboxComponent","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,mEAA9B;;;;;;;;;;;;;;;;ACZA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,EAKrB;AACED,UAAI,EAAE,OADR;AAEEC,eAAS,EAAE;AAFb,KALqB,EASrB;AACED,UAAI,EAAE,OADR;AAEEC,eAAS,EAAE;AAFb,KATqB,EAarB;AACED,UAAI,EAAE,SADR;AAEEC,eAAS,EAAE;AAFb,KAbqB,EAiBrB;AACED,UAAI,EAAE,IADR;AAEEE,gBAAU,EAAE;AAFd,KAjBqB,CAAvB;;AA2BA,QAAaC,gBAAgB;AAAA;AAAA,KAA7B;;AAAaA,oBAAgB,6DAJ5B,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CADD;AAERF,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAI4B,GAAhBM,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9Bb,QAAaG,YAAY;AAAA;AAAA,KAAzB;;AAAaA,gBAAY,6DAJxB,gEAAU;AACTC,cAAQ,EAAE,UADD;AAETC,cAAQ,EAAR;AAAA;AAAA;AAFS,KAAV,CAIwB,GAAZF,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoCb,QAAaG,SAAS;AAAA;AAAA,KAAtB;;AAAaA,aAAS,6DA1BrB,+DAAS;AACRC,kBAAY,EAAE,CACZ,2DADY,EAEZ,sEAFY,EAGZ,sEAHY,EAIZ,yEAJY,EAKZ,qEALY,EAMZ,8EANY,CADN;AASRN,aAAO,EAAE,CACP,0DADO,EAEP,uEAFO,EAGP,qEAHO,EAIP,sEAJO,EAKP,4FALO,EAMP,wEANO,CATD;AAiBRO,eAAS,EAAE,CACT;AACEC,eAAO,EAAE,+EADX;AAEEC,gBAAQ,EAAE;AAFZ,OADS,EAKT,8EALS,CAjBH;AAwBRC,eAAS,EAAE,CAAC,2DAAD;AAxBH,KAAT,CA0BqB,GAATL,SAAS,CAAT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCb,QAAaM,cAAc;AAA3B;AAAA;;AAAA;;AACE,aAAAC,GAAA,GAAc,GAAd;AACA,aAAAC,KAAA,GAAgB,GAAhB;AACA,aAAAC,IAAA,GAAe,GAAf;;AACA,aAAAC,GAAA,GAAM,UAACC,GAAD;AAAA,iBAAyBA,GAAG,CAACC,QAAJ,CAAa,EAAb,EAAiBC,MAAjB,KAA4B,CAA5B,GAAgC,MAAMF,GAAG,CAACC,QAAJ,CAAa,EAAb,CAAtC,GAAyDD,GAAG,CAACC,QAAJ,CAAa,EAAb,CAAlF;AAAA,SAAN;;AAKA,aAAAE,WAAA,GAAc,UAACC,KAAD,EAA2B;AACvC,cAAMC,QAAQ,GAAWC,QAAQ,CAACF,KAAD,EAAQ,EAAR,CAAjC;;AACA,cAAIG,KAAK,CAACF,QAAD,CAAL,IAAmBD,KAAK,CAACF,MAAN,GAAe,CAAtC,EAAyC;AACvC,mBAAO,KAAI,CAACN,GAAZ;AACD;;AACD,iBAAO,KAAI,CAACA,GAAL,GAAWS,QAAlB;AACD,SAND;;AAQA,aAAAG,aAAA,GAAgB,UAACJ,KAAD,EAA2B;AACzC,cAAMC,QAAQ,GAAWC,QAAQ,CAACF,KAAD,EAAQ,EAAR,CAAjC;;AACA,cAAIG,KAAK,CAACF,QAAD,CAAL,IAAmBD,KAAK,CAACF,MAAN,GAAe,CAAtC,EAAyC;AACvC,mBAAO,KAAI,CAACL,KAAZ;AACD;;AACD,iBAAO,KAAI,CAACA,KAAL,GAAaQ,QAApB;AACD,SAND;;AAQA,aAAAI,YAAA,GAAe,UAACL,KAAD,EAA2B;AACxC,cAAMC,QAAQ,GAAWC,QAAQ,CAACF,KAAD,EAAQ,EAAR,CAAjC;;AACA,cAAIG,KAAK,CAACF,QAAD,CAAL,IAAmBD,KAAK,CAACF,MAAN,GAAe,CAAtC,EAAyC;AACvC,mBAAO,KAAI,CAACJ,IAAZ;AACD;;AACD,iBAAO,KAAI,CAACA,IAAL,GAAYO,QAAnB;AACD,SAND;AASD;;AAlC0B;AAAA;AAAA,4BAKX;AACZ,iBAAO,MAAM,KAAKN,GAAL,CAAS,KAAKH,GAAd,CAAN,GAA2B,KAAKG,GAAL,CAAS,KAAKF,KAAd,CAA3B,GAAkD,KAAKE,GAAL,CAAS,KAAKD,IAAd,CAAzD;AACD;AAPwB;;AAAA;AAAA,OAA3B;;AAAaH,kBAAc,6DAJ1B,gEAAU;AACTR,cAAQ,EAAE,YADD;AAETC,cAAQ,EAAR;AAAA;AAAA;AAFS,KAAV,CAI0B,GAAdO,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAae,cAAc;AAEzB,gCAAc;AAAA;AAAG;;AAFQ;AAAA;AAAA,mCAId,CACV;AALwB;;AAAA;AAAA,OAA3B;;AAAaA,kBAAc,6DAJ1B,gEAAU;AACTvB,cAAQ,EAAE,WADD;AAETC,cAAQ,EAAR;AAAA;AAAA;AAFS,KAAV,CAI0B,GAAdsB,cAAc,CAAd;;;;;;;;;;;;;;;;ACNb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAaC,eAAe;AAAA;AAAA,KAA5B;;AAAaA,mBAAe,6DAL3B,gEAAU;AACTxB,cAAQ,EAAE,YADD;AAETC,cAAQ,EAAR;AAAA;AAAA,iGAFS;;;;AAAA,KAAV,CAK2B,GAAfuB,eAAe,CAAf;;;;;;;;;;;;;;;;ACPb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAaC,cAAc;AA+BzB,8BACUC,gBADV,EAC4C;AAAA;;AAAlC,aAAAA,gBAAA,GAAAA,gBAAA;AA7BF,aAAAC,YAAA,GAAe,SAAf;AACA,aAAAC,UAAA,GAAa,KAAb;AAED,aAAAC,SAAA,GAAY,2DAAZ;AACA,aAAAC,OAAA,GAAUC,MAAM,CAAC3C,IAAjB;AACA,aAAA4C,KAAA,GAAQ,EAAR;AACA,aAAAC,SAAA,GAAY,EAAZ;AACA,aAAAC,KAAA,GAAQ,CAAR;AACA,aAAAC,eAAA,GAAkB,KAAlB;AACA,aAAAC,WAAA,GAAc,KAAd;AACA,aAAAC,YAAA,GAAe,KAAf;AACA,aAAAC,UAAA,GAAa,KAAKZ,gBAAL,CAAsBa,QAAtB,EAAb;AAEC,aAAAC,KAAA,GAAQ;AACdC,mBAAS,EAAE,0DAASC,IADN;AAEdC,eAAK,EAAE,CACL;AACEC,aAAC,EAAE,CAAC,CADN;AAEEC,aAAC,EAAE,CAAC;AAFN,WADK;AAFO,SAAR;AAUA,aAAAC,KAAA,GAAQ;AACdF,WAAC,EAAE,CAAC,CADU;AAEdC,WAAC,EAAE,CAAC;AAFU,SAAR;AAQN,aAAKE,QAAL;AACD;;AAnCwB;AAAA;AAAA,6CAqCJ9D,CArCI,EAqCc;AACrC,cAAIA,CAAC,CAAC+D,GAAF,KAAU,0DAASN,IAAnB,IAA2B,KAAKF,KAAL,CAAWC,SAAX,KAAyB,0DAASQ,KAAjE,EAAwE;AACtE,iBAAKC,aAAL,GAAqB,0DAASR,IAA9B;AACD,WAFD,MAEO,IAAIzD,CAAC,CAAC+D,GAAF,KAAU,0DAASG,EAAnB,IAAyB,KAAKX,KAAL,CAAWC,SAAX,KAAyB,0DAASW,IAA/D,EAAqE;AAC1E,iBAAKF,aAAL,GAAqB,0DAASC,EAA9B;AACD,WAFM,MAEA,IAAIlE,CAAC,CAAC+D,GAAF,KAAU,0DAASC,KAAnB,IAA4B,KAAKT,KAAL,CAAWC,SAAX,KAAyB,0DAASC,IAAlE,EAAwE;AAC7E,iBAAKQ,aAAL,GAAqB,0DAASD,KAA9B;AACD,WAFM,MAEA,IAAIhE,CAAC,CAAC+D,GAAF,KAAU,0DAASI,IAAnB,IAA2B,KAAKZ,KAAL,CAAWC,SAAX,KAAyB,0DAASU,EAAjE,EAAqE;AAC1E,iBAAKD,aAAL,GAAqB,0DAASE,IAA9B;AACD;AACF;AA/CwB;AAAA;AAAA,kCAiDfC,GAjDe,EAiDFC,GAjDE,EAiDS;AAChC,cAAI,KAAK1B,UAAT,EAAqB;AACnB,mBAAO,wDAAO2B,SAAd;AACD,WAFD,MAEO,IAAI,KAAKT,KAAL,CAAWF,CAAX,KAAiBU,GAAjB,IAAwB,KAAKR,KAAL,CAAWD,CAAX,KAAiBQ,GAA7C,EAAkD;AACvD,mBAAO,wDAAOG,KAAd;AACD,WAFM,MAEA,IAAI,KAAKhB,KAAL,CAAWG,KAAX,CAAiB,CAAjB,EAAoBC,CAApB,KAA0BU,GAA1B,IAAiC,KAAKd,KAAL,CAAWG,KAAX,CAAiB,CAAjB,EAAoBE,CAApB,KAA0BQ,GAA/D,EAAoE;AACzE,mBAAO,wDAAOI,IAAd;AACD,WAFM,MAEA,IAAI,KAAKzB,KAAL,CAAWqB,GAAX,EAAgBC,GAAhB,MAAyB,IAA7B,EAAmC;AACxC,mBAAO,wDAAOI,IAAd;AACD,WAFM,MAEA,IAAI,KAAK/B,YAAL,KAAsB,WAAtB,IAAqC,KAAKgC,cAAL,CAAoBL,GAApB,EAAyBD,GAAzB,CAAzC,EAAwE;AAC7E,mBAAO,wDAAOO,QAAd;AACD;;AAED,iBAAO,wDAAOC,KAAd;AACD;AA/DwB;AAAA;AAAA,0CAiEV;AACb,cAAIC,OAAO,GAAG,KAAKC,cAAL,EAAd;AACA,cAAIC,EAAE,GAAG,IAAT;;AAEA,cAAI,KAAKrC,YAAL,KAAsB,SAAtB,IAAmC,KAAKsC,cAAL,CAAoBH,OAApB,CAAvC,EAAqE;AACnE,mBAAO,KAAKI,QAAL,EAAP;AACD,WAFD,MAEO,IAAI,KAAKvC,YAAL,KAAsB,UAA1B,EAAsC;AAC3C,iBAAKwC,iBAAL,CAAuBL,OAAvB;AACD,WAFM,MAEA,IAAI,KAAKnC,YAAL,KAAsB,WAA1B,EAAuC;AAC5C,iBAAKwC,iBAAL,CAAuBL,OAAvB;;AACA,gBAAI,KAAKM,iBAAL,CAAuBN,OAAvB,CAAJ,EAAqC;AACnC,qBAAO,KAAKI,QAAL,EAAP;AACD;AACF;;AAED,cAAI,KAAKG,aAAL,CAAmBP,OAAnB,CAAJ,EAAiC;AAC/B,mBAAO,KAAKI,QAAL,EAAP;AACD,WAFD,MAEO,IAAI,KAAKI,cAAL,CAAoBR,OAApB,CAAJ,EAAkC;AACvC,iBAAKS,QAAL;AACD;;AAED,cAAIC,OAAO,GAAG,KAAKhC,KAAL,CAAWG,KAAX,CAAiB8B,GAAjB,EAAd;AACA,eAAKzC,KAAL,CAAWwC,OAAO,CAAC3B,CAAnB,EAAsB2B,OAAO,CAAC5B,CAA9B,IAAmC,KAAnC;AAEA,eAAKJ,KAAL,CAAWG,KAAX,CAAiB+B,OAAjB,CAAyBZ,OAAzB;AACA,eAAK9B,KAAL,CAAW8B,OAAO,CAACjB,CAAnB,EAAsBiB,OAAO,CAAClB,CAA9B,IAAmC,IAAnC;AAEA,eAAKJ,KAAL,CAAWC,SAAX,GAAuB,KAAKS,aAA5B;AAEAyB,oBAAU,CAAC,YAAM;AACfX,cAAE,CAACY,eAAH;AACD,WAFS,EAEP,KAAKC,QAFE,CAAV;AAGD;AAjGwB;AAAA;AAAA,yCAmGX;AACZ,cAAIf,OAAO,GAAG/B,MAAM,CAAC+C,MAAP,CAAc,EAAd,EAAkB,KAAKtC,KAAL,CAAWG,KAAX,CAAiB,CAAjB,CAAlB,CAAd;;AAEA,cAAI,KAAKO,aAAL,KAAuB,0DAASR,IAApC,EAA0C;AACxCoB,mBAAO,CAAClB,CAAR,IAAa,CAAb;AACD,WAFD,MAEO,IAAI,KAAKM,aAAL,KAAuB,0DAASD,KAApC,EAA2C;AAChDa,mBAAO,CAAClB,CAAR,IAAa,CAAb;AACD,WAFM,MAEA,IAAI,KAAKM,aAAL,KAAuB,0DAASC,EAApC,EAAwC;AAC7CW,mBAAO,CAACjB,CAAR,IAAa,CAAb;AACD,WAFM,MAEA,IAAI,KAAKK,aAAL,KAAuB,0DAASE,IAApC,EAA0C;AAC/CU,mBAAO,CAACjB,CAAR,IAAa,CAAb;AACD;;AAED,iBAAOiB,OAAP;AACD;AAjHwB;AAAA;AAAA,0CAmHPiB,IAnHO,EAmHE;AACzB,cAAIA,IAAI,CAACnC,CAAL,KAAW,2DAAf,EAA2B;AACzBmC,gBAAI,CAACnC,CAAL,GAAS,CAAT;AACD,WAFD,MAEO,IAAImC,IAAI,CAACnC,CAAL,KAAW,CAAC,CAAhB,EAAmB;AACxBmC,gBAAI,CAACnC,CAAL,GAAS,8DAAa,CAAtB;AACD;;AAED,cAAImC,IAAI,CAAClC,CAAL,KAAW,2DAAf,EAA2B;AACzBkC,gBAAI,CAAClC,CAAL,GAAS,CAAT;AACD,WAFD,MAEO,IAAIkC,IAAI,CAAClC,CAAL,KAAW,CAAC,CAAhB,EAAmB;AACxBkC,gBAAI,CAAClC,CAAL,GAAS,8DAAa,CAAtB;AACD;AACF;AA/HwB;AAAA;AAAA,uCAiIb;AACV,cAAID,CAAC,GAAG,KAAKoC,YAAL,EAAR;AACA,cAAInC,CAAC,GAAG,KAAKmC,YAAL,EAAR;;AAEA,cAAI,KAAKhD,KAAL,CAAWa,CAAX,EAAcD,CAAd,MAAqB,IAArB,IAA6BC,CAAC,KAAK,CAAvC,EAA0C;AACxC,mBAAO,KAAKoC,YAAL,EAAP;AACD;;AAED,eAAKhD,SAAL,CAAeiD,IAAf,CAAoB;AAClBtC,aAAC,EAAEA,CADe;AAElBC,aAAC,EAAEA;AAFe,WAApB;AAID;AA7IwB;AAAA;AAAA,uCA+IVD,CA/IU,EA+IPC,CA/IO,EA+IN;AACjB,cAAIsC,GAAG,GAAG,KAAV;AAEA,eAAKlD,SAAL,CAAemD,OAAf,CAAuB,UAACC,GAAD,EAAS;AAC9B,gBAAIA,GAAG,CAACzC,CAAJ,KAAUA,CAAV,IAAeyC,GAAG,CAACxC,CAAJ,KAAUA,CAA7B,EAAgC;AAC9BsC,iBAAG,GAAG,IAAN;AACD;AACF,WAJD;AAMA,iBAAOA,GAAP;AACD;AAzJwB;AAAA;AAAA,0CA2JPJ,IA3JO,EA2JE;AACzB,iBAAO,KAAKpB,cAAL,CAAoBoB,IAAI,CAACnC,CAAzB,EAA4BmC,IAAI,CAAClC,CAAjC,CAAP;AACD;AA7JwB;AAAA;AAAA,uCA+JVkC,IA/JU,EA+JD;AACtB,iBAAOA,IAAI,CAACnC,CAAL,KAAW,2DAAX,IAAyBmC,IAAI,CAACnC,CAAL,KAAW,CAAC,CAArC,IAA0CmC,IAAI,CAAClC,CAAL,KAAW,2DAArD,IAAmEkC,IAAI,CAAClC,CAAL,KAAW,CAAC,CAAtF;AACD;AAjKwB;AAAA;AAAA,sCAmKXkC,IAnKW,EAmKF;AACrB,iBAAO,KAAK/C,KAAL,CAAW+C,IAAI,CAAClC,CAAhB,EAAmBkC,IAAI,CAACnC,CAAxB,MAA+B,IAAtC;AACD;AArKwB;AAAA;AAAA,uCAuKVmC,IAvKU,EAuKD;AACtB,iBAAOA,IAAI,CAACnC,CAAL,KAAW,KAAKE,KAAL,CAAWF,CAAtB,IAA2BmC,IAAI,CAAClC,CAAL,KAAW,KAAKC,KAAL,CAAWD,CAAxD;AACD;AAzKwB;AAAA;AAAA,qCA2Kf;AACR,cAAID,CAAC,GAAG,KAAKoC,YAAL,EAAR;AACA,cAAInC,CAAC,GAAG,KAAKmC,YAAL,EAAR;;AAEA,cAAI,KAAKhD,KAAL,CAAWa,CAAX,EAAcD,CAAd,MAAqB,IAArB,IAA6B,KAAKe,cAAL,CAAoBf,CAApB,EAAuBC,CAAvB,CAAjC,EAA4D;AAC1D,mBAAO,KAAKyC,UAAL,EAAP;AACD;;AAED,eAAKxC,KAAL,GAAa;AACXF,aAAC,EAAEA,CADQ;AAEXC,aAAC,EAAEA;AAFQ,WAAb;AAID;AAvLwB;AAAA;AAAA,mCAyLjB;AACN,eAAKX,KAAL;AAEA,cAAIqD,IAAI,GAAGxD,MAAM,CAAC+C,MAAP,CAAc,EAAd,EAAkB,KAAKtC,KAAL,CAAWG,KAAX,CAAiB,KAAKH,KAAL,CAAWG,KAAX,CAAiB5B,MAAjB,GAA0B,CAA3C,CAAlB,CAAX;AAEA,eAAKyB,KAAL,CAAWG,KAAX,CAAiBuC,IAAjB,CAAsBK,IAAtB;AACA,eAAKD,UAAL;;AAEA,cAAI,KAAKpD,KAAL,GAAa,CAAb,KAAmB,CAAvB,EAA0B;AACxB,iBAAK2C,QAAL,IAAiB,EAAjB;AACD;AACF;AApMwB;AAAA;AAAA,mCAsMjB;AACN,eAAKjD,UAAL,GAAkB,IAAlB;AACA,eAAKQ,WAAL,GAAmB,KAAnB;AACA,cAAI4B,EAAE,GAAG,IAAT;;AAEA,cAAI,KAAK9B,KAAL,GAAa,KAAKI,UAAtB,EAAkC;AAChC,iBAAKZ,gBAAL,CAAsB8D,KAAtB,CAA4B,KAAKtD,KAAjC;AACA,iBAAKI,UAAL,GAAkB,KAAKJ,KAAvB;AACA,iBAAKG,YAAL,GAAoB,IAApB;AACD;;AAEDsC,oBAAU,CAAC,YAAM;AACfX,cAAE,CAACpC,UAAH,GAAgB,KAAhB;AACD,WAFS,EAEP,GAFO,CAAV;AAIA,eAAKmB,QAAL;AACD;AAtNwB;AAAA;AAAA,uCAwNb;AACV,iBAAO0C,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,2DAA3B,CAAP;AACD;AA1NwB;AAAA;AAAA,mCA4NjB;AACN,eAAK3D,KAAL,GAAa,EAAb;;AAEA,eAAK,IAAI4D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,2DAApB,EAAgCA,CAAC,EAAjC,EAAqC;AACnC,iBAAK5D,KAAL,CAAW4D,CAAX,IAAgB,EAAhB;;AACA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,2DAApB,EAAgCA,CAAC,EAAjC,EAAqC;AACnC,mBAAK7D,KAAL,CAAW4D,CAAX,EAAcC,CAAd,IAAmB,KAAnB;AACD;AACF;AACF;AArOwB;AAAA;AAAA,mCAuOjB;AACN,eAAK1D,eAAL,GAAuB,CAAC,KAAKA,eAA7B;AACD;AAzOwB;AAAA;AAAA,gCA2OjB2D,IA3OiB,EA2OL;AAClB,eAAKnE,YAAL,GAAoBmE,IAAI,IAAI,SAA5B;AACA,eAAK3D,eAAL,GAAuB,KAAvB;AACA,eAAKE,YAAL,GAAoB,KAApB;AACA,eAAKD,WAAL,GAAmB,IAAnB;AACA,eAAKF,KAAL,GAAa,CAAb;AACA,eAAKgB,aAAL,GAAqB,0DAASR,IAA9B;AACA,eAAKd,UAAL,GAAkB,KAAlB;AACA,eAAKiD,QAAL,GAAgB,GAAhB;AACA,eAAKrC,KAAL,GAAa;AACXC,qBAAS,EAAE,0DAASC,IADT;AAEXC,iBAAK,EAAE;AAFI,WAAb;;AAKA,eAAK,IAAIiD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,iBAAKpD,KAAL,CAAWG,KAAX,CAAiBuC,IAAjB,CAAsB;AAAEtC,eAAC,EAAE,IAAIgD,CAAT;AAAY/C,eAAC,EAAE;AAAf,aAAtB;AACD;;AAED,cAAIiD,IAAI,KAAK,WAAb,EAA0B;AACxB,iBAAK7D,SAAL,GAAiB,EAAjB;AACA,gBAAI4D,CAAC,GAAG,CAAR;;AACA,eAAG;AACD,mBAAKZ,YAAL;AACD,aAFD,QAESY,CAAC,KAAK,CAFf;AAGD;;AAED,eAAKP,UAAL;AACA,eAAKV,eAAL;AACD;AAvQwB;;AAAA;AAAA,OAA3B;;;;cAgC8B;;;;AAhCjBnD,kBAAc,6DAR1B,gEAAU;AACTzB,cAAQ,EAAE,WADD;AAETC,cAAQ,EAAR;AAAA;AAAA,+FAFS;AAIT8F,UAAI,EAAE;AACJ,8BAAsB;AADlB,OAJG;;;;AAAA,KAAV,CAQ0B,GAAdtE,cAAc,CAAd;;;;;;;;;;;;;;;;ACbb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMuE,UAAU,GAAG,EAAnB;AAEA,QAAMC,QAAQ,GAAG;AACtBvD,UAAI,EAAE,WADgB;AAEtBS,QAAE,EAAE,SAFkB;AAGtBF,WAAK,EAAE,YAHe;AAItBG,UAAI,EAAE;AAJgB,KAAjB;AAOA,QAAM8C,MAAM,GAAG;AACpB3C,eAAS,EAAE,SADS;AAEpBC,WAAK,EAAE,SAFa;AAGpBC,UAAI,EAAE,SAHc;AAIpBC,UAAI,EAAE,SAJc;AAKpBG,WAAK,EAAE,SALa;AAMpBD,cAAQ,EAAE;AANU,KAAf;AASA,QAAMuC,UAAU,GAAG;AACxBC,aAAO,EAAE,SADe;AAExBC,cAAQ,EAAE,UAFc;AAGxBpE,eAAS,EAAE;AAHa,KAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfP,QAAaqE,gBAAgB;AAA7B;AAAA;;AAEU,aAAAC,QAAA,GAAW,WAAX;AAmBT;;AArB4B;AAAA;AAAA,8BAIdrE,KAJc,EAIC;AAC1BsE,sBAAY,CAACC,OAAb,CAAqB,KAAKF,QAA1B,EAAoCG,IAAI,CAACC,SAAL,CAAe;AAAE,0BAAczE;AAAhB,WAAf,CAApC;AACD;AAN0B;AAAA;AAAA,mCAQT;AAChB,cAAI0E,OAAO,GAAG,KAAKC,KAAL,EAAd;;AACA,cAAI,CAACD,OAAL,EAAc;AACZ,iBAAKpB,KAAL,CAAW,CAAX;AACAoB,mBAAO,GAAG,KAAKC,KAAL,EAAV;AACD;;AAED,iBAAOD,OAAO,CAACtE,UAAf;AACD;AAhB0B;AAAA;AAAA,gCAkBX;AACd,iBAAOoE,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,KAAKP,QAA1B,CAAX,CAAP;AACD;AApB0B;;AAAA;AAAA,OAA7B;;AAAaD,oBAAgB,6DAD5B,kEAC4B,GAAhBA,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAaS,gBAAgB;AAAA;AAAA,KAA7B;;AAAaA,oBAAgB,6DAJ5B,gEAAU;AACT/G,cAAQ,EAAE,aADD;AAETC,cAAQ,EAAR;AAAA;AAAA;AAFS,KAAV,CAI4B,GAAhB8G,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACNb;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,uGAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./node_modules/@angular/core/__ivy_ngcc__/fesm2015 lazy recursive\";","export default \"<jih-header></jih-header>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\";","export default \"<div style=\\\"margin-top: 100px;\\\"></div>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row no-gutters\\\">\\r\\n    <div class=\\\"col-6 row no-gutters\\\">\\r\\n      <div class=\\\"col-12 row no-gutters\\\">\\r\\n        <div class=\\\"col-1 my-auto\\\">\\r\\n          Reytt:\\r\\n        </div>\\r\\n        <div class=\\\"col-3\\\">\\r\\n          <mat-slider tabIndex=\\\"-1\\\" min=\\\"0\\\" max=\\\"255\\\" step=\\\"1\\\" [(ngModel)]=\\\"red\\\"></mat-slider>\\r\\n        </div>\\r\\n        <div class=\\\"input-group mb-3 col\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\" id=\\\"redHex\\\">Hex:</span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 aria-label=\\\"Reyð hexkota\\\"\\r\\n                 placeholder=\\\"Reyð hexkota\\\"\\r\\n                 aria-describedby=\\\"redHex\\\"\\r\\n                 (input)=\\\"onChangeRed($event.target.value)\\\"\\r\\n                 [value]=\\\"hex(red)\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-12 row no-gutters\\\">\\r\\n        <div class=\\\"col-1 my-auto\\\">\\r\\n          Grønt:\\r\\n        </div>\\r\\n        <div class=\\\"col-3\\\">\\r\\n          <mat-slider tabIndex=\\\"-1\\\" min=\\\"0\\\" max=\\\"255\\\" step=\\\"1\\\" [(ngModel)]=\\\"green\\\"></mat-slider>\\r\\n        </div>\\r\\n        <div class=\\\"input-group mb-3 col\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\" id=\\\"greenHex\\\">Hex:</span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 aria-label=\\\"Grøn hexkota\\\"\\r\\n                 placeholder=\\\"Grøn hexkota\\\"\\r\\n                 aria-describedby=\\\"greenHex\\\"\\r\\n                 (input)=\\\"onChangeGreen($event.target.value)\\\"\\r\\n                 [value]=\\\"hex(green)\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-12 row no-gutters\\\">\\r\\n        <div class=\\\"col-1 my-auto\\\">\\r\\n          Blátt:\\r\\n        </div>\\r\\n        <div class=\\\"col-3\\\">\\r\\n          <mat-slider tabIndex=\\\"-1\\\" min=\\\"0\\\" max=\\\"255\\\" step=\\\"1\\\" [(ngModel)]=\\\"blue\\\"></mat-slider>\\r\\n        </div>\\r\\n        <div class=\\\"input-group mb-3 col\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\" id=\\\"blueHex\\\">Hex:</span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 aria-label=\\\"Blá hexkota\\\"\\r\\n                 placeholder=\\\"Blá hexkota\\\"\\r\\n                 aria-describedby=\\\"blueHex\\\"\\r\\n                 (input)=\\\"onChangeBlue($event.target.value)\\\"\\r\\n                 [value]=\\\"hex(blue)\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-12\\\">\\r\\n        <div style=\\\"width: 100px; height: 100px;\\\" [style.background-color]=\\\"bgColor\\\"></div>\\r\\n        Farvukota: {{ bgColor }}\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"mt-2 row no-gutters\\\">\\r\\n    <div class=\\\"col\\\"></div>\\r\\n    <div class=\\\"card col-4\\\">\\r\\n        <div class=\\\"card-header\\\"><a href=\\\"../../assets/files/some.zip\\\">Some.zip</a></div>\\r\\n        <div class=\\\"card-body\\\">Bara ein tóm fíla</div>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\"></div>\\r\\n</div>\\r\\n\";","export default \"<nav class=\\\"jih-navbar navbar navbar-expand-md navbar-dark bg-dark\\\">\\r\\n  <div class=\\\"navbar-header\\\">\\r\\n    <ul class=\\\"navbar-nav\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <button class=\\\"btn btn-outline-light mx-1\\\" [routerLink]=\\\"['']\\\">Farvur</button>\\r\\n        <button class=\\\"btn btn-outline-light mx-1\\\" [routerLink]=\\\"['snake']\\\">Snake</button>\\r\\n        <button class=\\\"btn btn-outline-light mx-1\\\" [routerLink]=\\\"['sandbox']\\\">Sandbox</button>\\r\\n<!--        <button class=\\\"btn btn-outline-light mx-1\\\" [routerLink]=\\\"['files']\\\">Fílur</button>-->\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\";","export default \"<div class=\\\"game-container\\\">\\r\\n  <div class=\\\"game-header\\\">\\r\\n    <h3 class=\\\"logo\\\">Snake</h3>\\r\\n    <div class=\\\"score-block\\\">\\r\\n      <h3 class=\\\"score\\\" [ngClass]=\\\"{'new-best-score': newBestScore}\\\">Score: {{score}}</h3>\\r\\n      <h3 class=\\\"best-score\\\" [ngClass]=\\\"{'new-best-score': newBestScore}\\\">Besta score: {{best_score}}</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngFor=\\\"let column of board; let i = index;\\\">\\r\\n    <div class=\\\"column\\\" [ngStyle]=\\\"{'background-color': setColors(i, j)}\\\" *ngFor=\\\"let row of column; let j = index\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"start-button\\\" [ngClass]=\\\"{'disable-clicks': gameStarted}\\\" (click)=\\\"showMenu()\\\">Byrja spælið</div>\\r\\n  <div class=\\\"new-game-menu\\\" *ngIf=\\\"showMenuChecker\\\">\\r\\n    <span class=\\\"new-game-menu-label\\\">Vel slag</span>\\r\\n    <div class=\\\"start-button new-game-button\\\" (click)=\\\"newGame(mode)\\\" *ngFor=\\\"let mode of getKeys(all_modes)\\\">{{all_modes[mode]}}</div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div style=\\\"background-color: #000; padding-bottom: 100px\\\">\\r\\n  <!-- Beast kill message: -->\\r\\n  <font color=\\\"#BBBBFF\\\"> <!-- Maybe random? -->\\r\\n    <font color=\\\"#FCFF11\\\">\\r\\n      <a style=\\\"color: #C89468;cursor:pointer;\\\" name=\\\"pmMakooly\\\">Makoolyj</a>\\r\\n      has slain the mega beast at 233,Sky,288!\\r\\n    </font>\\r\\n  </font>\\r\\n  <br />\\r\\n\\r\\n  <!-- Beast summon message: -->\\r\\n  <font color=\\\"#FF6666\\\"> <!-- Maybe random? -->\\r\\n    <font color=\\\"#FCFF11\\\">\\r\\n      <a style=\\\"color: #C89468;cursor:pointer;\\\" name=\\\"pmTurd+Collector\\\">Turd Collector</a>\\r\\n      has awoken a beast near 233,Sky,288!!!\\r\\n    </font>\\r\\n  </font>\\r\\n  <br />\\r\\n\\r\\n  <!-- Purple system message: -->\\r\\n  <font color=\\\"#CC00CC\\\">\\r\\n    <a style=\\\"color: #C89468;cursor:pointer;\\\" name=\\\"pm\\\"></a>\\r\\n    Your blessed treasury at 026,For,268 has gained 20,523mil interest in the last 17 hours.  Total: 2,590,525\\r\\n  </font>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { FilesComponent } from \"./files/files.component\";\r\nimport { ColorComponent } from \"./colors/color.component\";\r\nimport { SnakeComponent } from \"./snake/snake.component\";\r\nimport { SandboxComponent } from \"./test-area/sandbox.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ColorComponent\r\n  },\r\n  {\r\n    path: 'files',\r\n    component: FilesComponent\r\n  },\r\n  {\r\n    path: 'snake',\r\n    component: SnakeComponent\r\n  },\r\n  {\r\n    path: 'sandbox',\r\n    component: SandboxComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: ''\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'jih-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent { }\r\n","import { BrowserModule, HAMMER_GESTURE_CONFIG, HammerModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule                            } from '@angular/platform-browser/animations';\r\nimport { MatSliderModule                                    } from '@angular/material/slider';\r\nimport { GestureConfig                                      } from '@angular/material';\r\nimport { FormsModule                                        } from \"@angular/forms\";\r\nimport { NgModule                                           } from '@angular/core';\r\n\r\nimport { AppComponent     } from './app.component';\r\nimport { FilesComponent   } from './files/files.component';\r\nimport { ColorComponent   } from \"./colors/color.component\";\r\nimport { SnakeComponent   } from \"./snake/snake.component\";\r\nimport { HeaderComponent  } from \"./header/header.component\";\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BestScoreManager } from \"./snake/snake.storage.service\";\r\nimport { SandboxComponent } from \"./test-area/sandbox.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SnakeComponent,\r\n    ColorComponent,\r\n    HeaderComponent,\r\n    FilesComponent,\r\n    SandboxComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HammerModule,\r\n    BrowserAnimationsModule,\r\n    MatSliderModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HAMMER_GESTURE_CONFIG,\r\n      useClass: GestureConfig\r\n    },\r\n    BestScoreManager\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'jih-colors',\r\n  templateUrl: './color.component.html'\r\n})\r\nexport class ColorComponent {\r\n  red: number = 255;\r\n  green: number = 255;\r\n  blue: number = 255;\r\n  hex = (num: number): string => num.toString(16).length === 1 ? '0' + num.toString(16) : num.toString(16);\r\n  get bgColor() {\r\n    return '#' + this.hex(this.red) + this.hex(this.green) + this.hex(this.blue);\r\n  }\r\n\r\n  onChangeRed = (value: string): number => {\r\n    const newValue: number = parseInt(value, 16);\r\n    if (isNaN(newValue) || value.length < 2) {\r\n      return this.red;\r\n    }\r\n    return this.red = newValue;\r\n  }\r\n\r\n  onChangeGreen = (value: string): number => {\r\n    const newValue: number = parseInt(value, 16);\r\n    if (isNaN(newValue) || value.length < 2) {\r\n      return this.green;\r\n    }\r\n    return this.green = newValue;\r\n  }\r\n\r\n  onChangeBlue = (value: string): number => {\r\n    const newValue: number = parseInt(value, 16);\r\n    if (isNaN(newValue) || value.length < 2) {\r\n      return this.blue;\r\n    }\r\n    return this.blue = newValue;\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'jih-files',\r\n  templateUrl: './files.component.html'\r\n})\r\nexport class FilesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".jih-navbar {\\r\\n  position: -webkit-sticky;\\r\\n  position: sticky;\\r\\n  top: 0;\\r\\n  z-index: 9999;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usd0JBQWdCO0VBQWhCLGdCQUFnQjtFQUNoQixNQUFNO0VBQ04sYUFBYTtBQUNmIiwiZmlsZSI6InNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmppaC1uYXZiYXIge1xyXG4gIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgdG9wOiAwO1xyXG4gIHotaW5kZXg6IDk5OTk7XHJcbn1cclxuIl19 */\";","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'jih-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent {\r\n\r\n}\r\n","export default \".game-header {\\r\\n  color: #fff;\\r\\n  padding: 5px 15px 5px 0px;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.game-header>.score-block {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.score-block>.score {\\r\\n  position: absolute;\\r\\n  right: 8px;\\r\\n  top: -5px;\\r\\n}\\r\\n\\r\\n.score-block>.best-score {\\r\\n  position: absolute;\\r\\n  right: 8px;\\r\\n  margin-top: 5px;\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n.game-header>.logo {\\r\\n  display: inline-block;\\r\\n  padding-left: 15px;\\r\\n}\\r\\n\\r\\n.game-container {\\r\\n  width: 468px;\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  margin: auto;\\r\\n  background-color: #47565A;\\r\\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.30), 0 15px 12px rgba(0, 0, 0, 0.22);\\r\\n  border-radius: 5px;\\r\\n}\\r\\n\\r\\n.row {\\r\\n  margin-left: 15px !important;\\r\\n  height: 26px;\\r\\n}\\r\\n\\r\\n.column {\\r\\n  border: 1px solid rgba(97, 131, 138, .1);\\r\\n  width: 24px;\\r\\n  height: 24px;\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.start-button {\\r\\n  padding: 15px;\\r\\n  text-align: center;\\r\\n  background-color: #47565A;\\r\\n  color: white;\\r\\n  border-radius: 5px;\\r\\n}\\r\\n\\r\\n.start-button:hover {\\r\\n  opacity: 0.65;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.start-button.new-game-button {\\r\\n  margin: 0 105px 4px 105px;\\r\\n}\\r\\n\\r\\n.disable-clicks {\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.new-game-menu {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  width: 100%;\\r\\n  bottom: 0;\\r\\n  padding: 40% 0;\\r\\n  text-align: center;\\r\\n  background: rgba(0, 0, 0, 0.15);\\r\\n}\\r\\n\\r\\n.new-game-menu-label {\\r\\n  font-size: 1.17em;\\r\\n  margin-bottom: 13px;\\r\\n  display: block;\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n.new-best-score {\\r\\n  -webkit-animation: glow .5s infinite alternate;\\r\\n          animation: glow .5s infinite alternate;\\r\\n}\\r\\n\\r\\n@-webkit-keyframes glow {\\r\\n  to {\\r\\n    text-shadow: 0 0 15px #ffff00;\\r\\n  }\\r\\n}\\r\\n\\r\\n@keyframes glow {\\r\\n  to {\\r\\n    text-shadow: 0 0 15px #ffff00;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 480px) {\\r\\n  .game-container {\\r\\n    width: 100%;\\r\\n  }\\r\\n  .column {\\r\\n    width: 5.55%;\\r\\n    height: 0;\\r\\n    padding-bottom: 5.06%;\\r\\n    box-sizing: border-box;\\r\\n  }\\r\\n  .row {\\r\\n    display: flex;\\r\\n    height: 0;\\r\\n    padding-bottom: 5.5%;\\r\\n  }\\r\\n  .new-game-menu {\\r\\n    width: 100%;\\r\\n    top: 8px;\\r\\n    padding-top: 30%;\\r\\n    font-size: 80%;\\r\\n  }\\r\\n  .start-button.new-game-button {\\r\\n    margin: 0 15% 1% 15%;\\r\\n  }\\r\\n  @-moz-document url-prefix() {\\r\\n    .column {\\r\\n      min-height: 5.5vw;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc25ha2Uvc25ha2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCx5QkFBeUI7RUFDekIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLGVBQWU7RUFDZixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsY0FBYztFQUNkLFlBQVk7RUFDWix5QkFBeUI7RUFDekIsNEVBQTRFO0VBQzVFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLDRCQUE0QjtFQUM1QixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSx3Q0FBd0M7RUFDeEMsV0FBVztFQUNYLFlBQVk7RUFDWixxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGVBQWU7QUFDakI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxvQkFBb0I7QUFDdEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLFdBQVc7RUFDWCxTQUFTO0VBQ1QsY0FBYztFQUNkLGtCQUFrQjtFQUNsQiwrQkFBK0I7QUFDakM7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsbUJBQW1CO0VBQ25CLGNBQWM7RUFDZCxXQUFXO0FBQ2I7O0FBRUE7RUFDRSw4Q0FBc0M7VUFBdEMsc0NBQXNDO0FBQ3hDOztBQUVBO0VBQ0U7SUFDRSw2QkFBNkI7RUFDL0I7QUFDRjs7QUFKQTtFQUNFO0lBQ0UsNkJBQTZCO0VBQy9CO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLFdBQVc7RUFDYjtFQUNBO0lBQ0UsWUFBWTtJQUNaLFNBQVM7SUFDVCxxQkFBcUI7SUFDckIsc0JBQXNCO0VBQ3hCO0VBQ0E7SUFLRSxhQUFhO0lBQ2IsU0FBUztJQUNULG9CQUFvQjtFQUN0QjtFQUNBO0lBQ0UsV0FBVztJQUNYLFFBQVE7SUFDUixnQkFBZ0I7SUFDaEIsY0FBYztFQUNoQjtFQUNBO0lBQ0Usb0JBQW9CO0VBQ3RCO0VBQ0E7SUFDRTtNQUNFLGlCQUFpQjtJQUNuQjtFQUNGO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9zbmFrZS9zbmFrZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdhbWUtaGVhZGVyIHtcclxuICBjb2xvcjogI2ZmZjtcclxuICBwYWRkaW5nOiA1cHggMTVweCA1cHggMHB4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLmdhbWUtaGVhZGVyPi5zY29yZS1ibG9jayB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG4uc2NvcmUtYmxvY2s+LnNjb3JlIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgcmlnaHQ6IDhweDtcclxuICB0b3A6IC01cHg7XHJcbn1cclxuXHJcbi5zY29yZS1ibG9jaz4uYmVzdC1zY29yZSB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHJpZ2h0OiA4cHg7XHJcbiAgbWFyZ2luLXRvcDogNXB4O1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxufVxyXG5cclxuLmdhbWUtaGVhZGVyPi5sb2dvIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG59XHJcblxyXG4uZ2FtZS1jb250YWluZXIge1xyXG4gIHdpZHRoOiA0NjhweDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0NzU2NUE7XHJcbiAgYm94LXNoYWRvdzogMCAxOXB4IDM4cHggcmdiYSgwLCAwLCAwLCAwLjMwKSwgMCAxNXB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjIyKTtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbi5yb3cge1xyXG4gIG1hcmdpbi1sZWZ0OiAxNXB4ICFpbXBvcnRhbnQ7XHJcbiAgaGVpZ2h0OiAyNnB4O1xyXG59XHJcblxyXG4uY29sdW1uIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDk3LCAxMzEsIDEzOCwgLjEpO1xyXG4gIHdpZHRoOiAyNHB4O1xyXG4gIGhlaWdodDogMjRweDtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbi5zdGFydC1idXR0b24ge1xyXG4gIHBhZGRpbmc6IDE1cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0NzU2NUE7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuLnN0YXJ0LWJ1dHRvbjpob3ZlciB7XHJcbiAgb3BhY2l0eTogMC42NTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5zdGFydC1idXR0b24ubmV3LWdhbWUtYnV0dG9uIHtcclxuICBtYXJnaW46IDAgMTA1cHggNHB4IDEwNXB4O1xyXG59XHJcblxyXG4uZGlzYWJsZS1jbGlja3Mge1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG59XHJcblxyXG4ubmV3LWdhbWUtbWVudSB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMDtcclxuICB3aWR0aDogMTAwJTtcclxuICBib3R0b206IDA7XHJcbiAgcGFkZGluZzogNDAlIDA7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4xNSk7XHJcbn1cclxuXHJcbi5uZXctZ2FtZS1tZW51LWxhYmVsIHtcclxuICBmb250LXNpemU6IDEuMTdlbTtcclxuICBtYXJnaW4tYm90dG9tOiAxM3B4O1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG4ubmV3LWJlc3Qtc2NvcmUge1xyXG4gIGFuaW1hdGlvbjogZ2xvdyAuNXMgaW5maW5pdGUgYWx0ZXJuYXRlO1xyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGdsb3cge1xyXG4gIHRvIHtcclxuICAgIHRleHQtc2hhZG93OiAwIDAgMTVweCAjZmZmZjAwO1xyXG4gIH1cclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcclxuICAuZ2FtZS1jb250YWluZXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIC5jb2x1bW4ge1xyXG4gICAgd2lkdGg6IDUuNTUlO1xyXG4gICAgaGVpZ2h0OiAwO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDUuMDYlO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICB9XHJcbiAgLnJvdyB7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgIGRpc3BsYXk6IC1tb3otYm94O1xyXG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgaGVpZ2h0OiAwO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDUuNSU7XHJcbiAgfVxyXG4gIC5uZXctZ2FtZS1tZW51IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgdG9wOiA4cHg7XHJcbiAgICBwYWRkaW5nLXRvcDogMzAlO1xyXG4gICAgZm9udC1zaXplOiA4MCU7XHJcbiAgfVxyXG4gIC5zdGFydC1idXR0b24ubmV3LWdhbWUtYnV0dG9uIHtcclxuICAgIG1hcmdpbjogMCAxNSUgMSUgMTUlO1xyXG4gIH1cclxuICBALW1vei1kb2N1bWVudCB1cmwtcHJlZml4KCkge1xyXG4gICAgLmNvbHVtbiB7XHJcbiAgICAgIG1pbi1oZWlnaHQ6IDUuNXZ3O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0= */\";","import { Component } from '@angular/core';\r\n\r\nimport { BestScoreManager } from './snake.storage.service';\r\nimport { CONTROLS, COLORS, BOARD_SIZE, GAME_MODES } from './snake.constants';\r\n\r\n@Component({\r\n  selector: 'jih-snake',\r\n  templateUrl: './snake.component.html',\r\n  styleUrls: ['./snake.component.css'],\r\n  host: {\r\n    '(document:keydown)': 'handleKeyboardEvents($event)'\r\n  }\r\n})\r\nexport class SnakeComponent {\r\n  private interval: number;\r\n  private tempDirection: string;\r\n  private default_mode = 'classic';\r\n  private isGameOver = false;\r\n\r\n  public all_modes = GAME_MODES;\r\n  public getKeys = Object.keys;\r\n  public board = [];\r\n  public obstacles = [];\r\n  public score = 0;\r\n  public showMenuChecker = false;\r\n  public gameStarted = false;\r\n  public newBestScore = false;\r\n  public best_score = this.bestScoreService.retrieve();\r\n\r\n  private snake = {\r\n    direction: CONTROLS.LEFT,\r\n    parts: [\r\n      {\r\n        x: -1,\r\n        y: -1\r\n      }\r\n    ]\r\n  };\r\n\r\n  private fruit = {\r\n    x: -1,\r\n    y: -1\r\n  };\r\n\r\n  constructor(\r\n    private bestScoreService: BestScoreManager\r\n  ) {\r\n    this.setBoard();\r\n  }\r\n\r\n  handleKeyboardEvents(e: KeyboardEvent) {\r\n    if (e.key === CONTROLS.LEFT && this.snake.direction !== CONTROLS.RIGHT) {\r\n      this.tempDirection = CONTROLS.LEFT;\r\n    } else if (e.key === CONTROLS.UP && this.snake.direction !== CONTROLS.DOWN) {\r\n      this.tempDirection = CONTROLS.UP;\r\n    } else if (e.key === CONTROLS.RIGHT && this.snake.direction !== CONTROLS.LEFT) {\r\n      this.tempDirection = CONTROLS.RIGHT;\r\n    } else if (e.key === CONTROLS.DOWN && this.snake.direction !== CONTROLS.UP) {\r\n      this.tempDirection = CONTROLS.DOWN;\r\n    }\r\n  }\r\n\r\n  setColors(col: number, row: number): string {\r\n    if (this.isGameOver) {\r\n      return COLORS.GAME_OVER;\r\n    } else if (this.fruit.x === row && this.fruit.y === col) {\r\n      return COLORS.FRUIT;\r\n    } else if (this.snake.parts[0].x === row && this.snake.parts[0].y === col) {\r\n      return COLORS.HEAD;\r\n    } else if (this.board[col][row] === true) {\r\n      return COLORS.BODY;\r\n    } else if (this.default_mode === 'obstacles' && this.checkObstacles(row, col)) {\r\n      return COLORS.OBSTACLE;\r\n    }\r\n\r\n    return COLORS.BOARD;\r\n  };\r\n\r\n  updatePositions(): void {\r\n    let newHead = this.repositionHead();\r\n    let me = this;\r\n\r\n    if (this.default_mode === 'classic' && this.boardCollision(newHead)) {\r\n      return this.gameOver();\r\n    } else if (this.default_mode === 'no_walls') {\r\n      this.noWallsTransition(newHead);\r\n    } else if (this.default_mode === 'obstacles') {\r\n      this.noWallsTransition(newHead);\r\n      if (this.obstacleCollision(newHead)) {\r\n        return this.gameOver();\r\n      }\r\n    }\r\n\r\n    if (this.selfCollision(newHead)) {\r\n      return this.gameOver();\r\n    } else if (this.fruitCollision(newHead)) {\r\n      this.eatFruit();\r\n    }\r\n\r\n    let oldTail = this.snake.parts.pop();\r\n    this.board[oldTail.y][oldTail.x] = false;\r\n\r\n    this.snake.parts.unshift(newHead);\r\n    this.board[newHead.y][newHead.x] = true;\r\n\r\n    this.snake.direction = this.tempDirection;\r\n\r\n    setTimeout(() => {\r\n      me.updatePositions();\r\n    }, this.interval);\r\n  }\r\n\r\n  repositionHead(): any {\r\n    let newHead = Object.assign({}, this.snake.parts[0]);\r\n\r\n    if (this.tempDirection === CONTROLS.LEFT) {\r\n      newHead.x -= 1;\r\n    } else if (this.tempDirection === CONTROLS.RIGHT) {\r\n      newHead.x += 1;\r\n    } else if (this.tempDirection === CONTROLS.UP) {\r\n      newHead.y -= 1;\r\n    } else if (this.tempDirection === CONTROLS.DOWN) {\r\n      newHead.y += 1;\r\n    }\r\n\r\n    return newHead;\r\n  }\r\n\r\n  noWallsTransition(part: any): void {\r\n    if (part.x === BOARD_SIZE) {\r\n      part.x = 0;\r\n    } else if (part.x === -1) {\r\n      part.x = BOARD_SIZE - 1;\r\n    }\r\n\r\n    if (part.y === BOARD_SIZE) {\r\n      part.y = 0;\r\n    } else if (part.y === -1) {\r\n      part.y = BOARD_SIZE - 1;\r\n    }\r\n  }\r\n\r\n  addObstacles(): void {\r\n    let x = this.randomNumber();\r\n    let y = this.randomNumber();\r\n\r\n    if (this.board[y][x] === true || y === 8) {\r\n      return this.addObstacles();\r\n    }\r\n\r\n    this.obstacles.push({\r\n      x: x,\r\n      y: y\r\n    });\r\n  }\r\n\r\n  checkObstacles(x, y): boolean {\r\n    let res = false;\r\n\r\n    this.obstacles.forEach((val) => {\r\n      if (val.x === x && val.y === y) {\r\n        res = true;\r\n      }\r\n    });\r\n\r\n    return res;\r\n  }\r\n\r\n  obstacleCollision(part: any): boolean {\r\n    return this.checkObstacles(part.x, part.y);\r\n  }\r\n\r\n  boardCollision(part: any): boolean {\r\n    return part.x === BOARD_SIZE || part.x === -1 || part.y === BOARD_SIZE || part.y === -1;\r\n  }\r\n\r\n  selfCollision(part: any): boolean {\r\n    return this.board[part.y][part.x] === true;\r\n  }\r\n\r\n  fruitCollision(part: any): boolean {\r\n    return part.x === this.fruit.x && part.y === this.fruit.y;\r\n  }\r\n\r\n  resetFruit(): void {\r\n    let x = this.randomNumber();\r\n    let y = this.randomNumber();\r\n\r\n    if (this.board[y][x] === true || this.checkObstacles(x, y)) {\r\n      return this.resetFruit();\r\n    }\r\n\r\n    this.fruit = {\r\n      x: x,\r\n      y: y\r\n    };\r\n  }\r\n\r\n  eatFruit(): void {\r\n    this.score++;\r\n\r\n    let tail = Object.assign({}, this.snake.parts[this.snake.parts.length - 1]);\r\n\r\n    this.snake.parts.push(tail);\r\n    this.resetFruit();\r\n\r\n    if (this.score % 5 === 0) {\r\n      this.interval -= 15;\r\n    }\r\n  }\r\n\r\n  gameOver(): void {\r\n    this.isGameOver = true;\r\n    this.gameStarted = false;\r\n    let me = this;\r\n\r\n    if (this.score > this.best_score) {\r\n      this.bestScoreService.store(this.score);\r\n      this.best_score = this.score;\r\n      this.newBestScore = true;\r\n    }\r\n\r\n    setTimeout(() => {\r\n      me.isGameOver = false;\r\n    }, 500);\r\n\r\n    this.setBoard();\r\n  }\r\n\r\n  randomNumber(): any {\r\n    return Math.floor(Math.random() * BOARD_SIZE);\r\n  }\r\n\r\n  setBoard(): void {\r\n    this.board = [];\r\n\r\n    for (let i = 0; i < BOARD_SIZE; i++) {\r\n      this.board[i] = [];\r\n      for (let j = 0; j < BOARD_SIZE; j++) {\r\n        this.board[i][j] = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  showMenu(): void {\r\n    this.showMenuChecker = !this.showMenuChecker;\r\n  }\r\n\r\n  newGame(mode: string): void {\r\n    this.default_mode = mode || 'classic';\r\n    this.showMenuChecker = false;\r\n    this.newBestScore = false;\r\n    this.gameStarted = true;\r\n    this.score = 0;\r\n    this.tempDirection = CONTROLS.LEFT;\r\n    this.isGameOver = false;\r\n    this.interval = 150;\r\n    this.snake = {\r\n      direction: CONTROLS.LEFT,\r\n      parts: []\r\n    };\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      this.snake.parts.push({ x: 8 + i, y: 8 });\r\n    }\r\n\r\n    if (mode === 'obstacles') {\r\n      this.obstacles = [];\r\n      let j = 1;\r\n      do {\r\n        this.addObstacles();\r\n      } while (j++ < 9);\r\n    }\r\n\r\n    this.resetFruit();\r\n    this.updatePositions();\r\n  }\r\n}\r\n","export const BOARD_SIZE = 18;\r\n\r\nexport const CONTROLS = {\r\n  LEFT: 'ArrowLeft',\r\n  UP: 'ArrowUp',\r\n  RIGHT: 'ArrowRight',\r\n  DOWN: 'ArrowDown'\r\n};\r\n\r\nexport const COLORS = {\r\n  GAME_OVER: '#D24D57',\r\n  FRUIT: '#EC644B',\r\n  HEAD: '#336E7B',\r\n  BODY: '#C8F7C5',\r\n  BOARD: '#86B5BD',\r\n  OBSTACLE: '#383522'\r\n};\r\n\r\nexport const GAME_MODES = {\r\n  classic: 'Classic',\r\n  no_walls: 'No Walls',\r\n  obstacles: 'Obstacles'\r\n};\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class BestScoreManager {\r\n\r\n  private ngxSnake = 'ngx_snake';\r\n\r\n  public store(score: number) {\r\n    localStorage.setItem(this.ngxSnake, JSON.stringify({ 'best_score': score }));\r\n  }\r\n\r\n  public retrieve() {\r\n    let storage = this.parse();\r\n    if (!storage) {\r\n      this.store(0);\r\n      storage = this.parse();\r\n    }\r\n\r\n    return storage.best_score;\r\n  }\r\n\r\n  private parse() {\r\n    return JSON.parse(localStorage.getItem(this.ngxSnake));\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'jih-sandbox',\r\n  templateUrl: './sandbox.component.html'\r\n})\r\nexport class SandboxComponent {\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport 'hammerjs';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}